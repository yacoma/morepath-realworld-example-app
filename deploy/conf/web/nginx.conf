upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/run/gunicorn/[socket].sock fail_timeout=0;

    # for a TCP configuration
    server [IP]:8000 fail_timeout=0;
}

server {
    listen      [IP]:80;
    server_name [URL] www.[URL];
    error_log  [PATH TO LOG].log error;
    client_max_body_size 10M;
    keepalive_timeout    15;

    location /api/ {
        proxy_pass          http://app_server/api/;
        proxy_redirect      off;
        proxy_set_header    Host                    $host;
        proxy_set_header    X-Real-IP               $remote_addr;
        proxy_set_header    X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Protocol    $scheme;

        # Define the maximum file size on file uploads
        client_max_body_size 5M;
    }

    location /static/ {
        root           [PATH TO APP];
        access_log     [PATH TO LOG].log combined;
        access_log     [PATH TO LOG].bytes bytes;
        expires        max;
        log_not_found  off;
    }

    location /robots.txt {
        root           [PATH TO APP]/static;
        access_log     [PATH TO LOG].log combined;
        access_log     [PATH TO LOG].bytes bytes;
        expires        max;
        log_not_found  off;
    }

    location /favicon.ico {
        root           [PATH TO APP]/static/img;
        access_log     [PATH TO LOG].log combined;
        access_log     [PATH TO LOG].bytes bytes;
        log_not_found  off;
    }

    location / {
        root           [PATH TO APP]/static;
        try_files      $uri $uri/ /index.html;
        access_log     [PATH TO LOG].log combined;
        access_log     [PATH TO LOG].bytes bytes;
        expires        max;
        log_not_found  off;
    }

    location /error/ {
        alias   [PATH TO ERRORS];
    }

    location ~ /\.git/  {return 404;}
}
